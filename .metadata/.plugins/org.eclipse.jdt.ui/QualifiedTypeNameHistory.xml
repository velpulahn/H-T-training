<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="javax.persistence.JoinColumn"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="com.hco.repo.UsersRepository"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.DeleteMapping"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UsernameNotFoundException"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.ExpiredJwtException"/>
    <fullyQualifiedTypeName name="com.hco.filters.JwtRequestFilter"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.databind.ser.std.StringSerializer"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.databind.JsonSerializer"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetails"/>
    <fullyQualifiedTypeName name="com.digitalbooks.models.JwtRequest"/>
    <fullyQualifiedTypeName name="com.hco.models.JwtRequest"/>
    <fullyQualifiedTypeName name="com.hco.models.JwtResponse"/>
    <fullyQualifiedTypeName name="com.hco.utils.JwtTokenUtil"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.DisabledException"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.BadCredentialsException"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
    <fullyQualifiedTypeName name="com.hco.entity.Response"/>
    <fullyQualifiedTypeName name="com.hco.service.UsersService"/>
    <fullyQualifiedTypeName name="com.hco.entity.Users"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.CrossOrigin"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.SpringBootApplication"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.boot.SpringApplication"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.Modifying"/>
    <fullyQualifiedTypeName name="org.springframework.data.repository.query.Param"/>
    <fullyQualifiedTypeName name="org.springframework.transaction.annotation.Transactional"/>
    <fullyQualifiedTypeName name="java.util.Random"/>
    <fullyQualifiedTypeName name="com.hco.model.HCOUser"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.KafkaTemplate"/>
    <fullyQualifiedTypeName name="org.apache.kafka.common.serialization.StringDeserializer"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.support.serializer.JsonDeserializer"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.DefaultKafkaConsumerFactory"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.ConsumerFactory"/>
    <fullyQualifiedTypeName name="org.apache.kafka.clients.consumer.ConsumerConfig"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.annotation.EnableKafka"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.annotation.KafkaListener"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest"/>
    <fullyQualifiedTypeName name="com.hco.service.HCOUserService"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.Test"/>
    <fullyQualifiedTypeName name="com.hco.entity.HCOUser"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.Assertions"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.context.SpringBootTest"/>
    <fullyQualifiedTypeName name="com.hco.repo.HCOUserRepository"/>
    <fullyQualifiedTypeName name="java.util.stream.Collectors"/>
    <fullyQualifiedTypeName name="java.util.stream.Stream"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.mockito.Mockito"/>
</qualifiedTypeNameHistroy>
